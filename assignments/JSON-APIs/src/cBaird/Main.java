package cBaird;import java.util.*;public class Main {    public static void main(String[] args) {        TweetLoader tweetLoader = new TweetLoader();        HashMap<String, BYUITweet> map = tweetLoader.retreiveTweetsWithHashTag("#byui");        List<BYUITweet> tweetsByName = new ArrayList<BYUITweet>(map.values());        Collections.sort(tweetsByName, new Comparator<BYUITweet>() {            public int compare(BYUITweet o1, BYUITweet o2) {                if (o1.getUser().getName() == null) {                    return -1;                }                if (o2.getUser().getName() == null) {                    return 1;                }                if (o1.getUser().getName().equals( o2.getUser().getName() )) {                    return 0;                }                return o1.getUser().getName().compareTo(o2.getUser().getName());            }        });        for (BYUITweet byuiTweet : tweetsByName) {            System.out.println(byuiTweet.getUser().getName() + " (" + byuiTweet.getUser().getFollowers()                    + " Followers) - " + byuiTweet.getText());        }        System.out.println("\nAnd for the Stretch challenge: ");        List<BYUITweet> tweetsByFollowers = new ArrayList<BYUITweet>(map.values());        Collections.sort(tweetsByFollowers, new Comparator<BYUITweet>() {            public int compare(BYUITweet o1, BYUITweet o2) {                if (o1.getUser().getFollowers() ==  o2.getUser().getFollowers()) {                    return 0;                }                else {                    return o1.getUser().getFollowers() - o2.getUser().getFollowers();                }            }        });        for (BYUITweet byuiTweet : tweetsByFollowers) {            System.out.println(byuiTweet.getUser().getName() + " (" + byuiTweet.getUser().getFollowers()                    + " Followers) - " + byuiTweet.getText());        }    }}